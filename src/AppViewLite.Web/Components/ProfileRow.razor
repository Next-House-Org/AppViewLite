@using Microsoft.AspNetCore.Components.Rendering
@inject RequestContext RequestContext

@code {
    [Parameter]
    public required BlueskyProfile Profile { get; set; }

    public void SetRequestContext(RequestContext ctx) => RequestContext = ctx;

    public void AddToTree(RenderTreeBuilder builder)
    {
        this.BuildRenderTree(builder);
    }

    private FacetData[] GuessedFacets;

    protected override void OnParametersSet()
    {
        // Facets are not stored explicitly in the profile lexicon
        GuessedFacets = StringUtils.GuessFacets(Profile.BasicData?.Description);
    }
}
<li class="profile-row @(Profile.BlockReason != default ? "profile-row-blocked" : null)" @key="@Profile.Did" data-profiledid="@Profile.Did" data-pendingload="@(Profile.BasicData == null ? 1 : 0)" data-followrkey="@Profile.FollowRKeyForAttribute" data-followsyou="@Profile.FollowsYouForAttribute">
    <a href="@Profile.BaseUrl" class="profile-row-avatar" tabindex="-1">
        <img src="@Profile.AvatarUrl" class="profile-image-small">
    </a>
    <div class="profile-indented profile-row-meta">
        <a href="@Profile.BaseUrl" class="profile-row-name">
            <TextWithFacets Text="@Profile.DisplayNameOrFallback" Facets="@Profile.BasicData?.DisplayNameFacets" IsProfileDisplayName="true"></TextWithFacets>
        </a>
        <ProfileBadges Profile="@Profile" />
    </div>

    <ProfileHandle Profile="@Profile" />

    @if (Profile.BlockReason != default)
    {
        <span class="profile-follow-relationship">@Profile.BlockReason.ToDisplayString(BlockSubjects.YouAndAuthor)</span>
    }
    <div class="profile-row-description profile-indented">
        <TextWithFacets Text="@Profile.BasicData?.Description" Facets="@GuessedFacets"></TextWithFacets>
    </div>

    <LabelBadges Labels="@Profile.Labels" ExtraClass="profile-indented" />

    @if (RequestContext.IsLoggedIn && Profile.Plc != RequestContext.LoggedInUser)
    {
        <FollowButton Profile="@Profile" />
    }
</li>
