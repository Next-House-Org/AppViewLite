@inject IHttpContextAccessor Context
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <base href="/" />
    <link rel="stylesheet" href="@Assets["lib/bootstrap/dist/css/bootstrap.min.css"]" />
    <link rel="stylesheet" href="@Assets["app.css"]" />
    <link rel="stylesheet" href="@Assets["AppViewLite.Web.styles.css"]" />
    <ImportMap />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet @rendermode="InteractiveAuto" />
</head>

<body>
    <Routes  @rendermode="@(Context.HttpContext!.Request.Path.ToString() is "/login" or "/logout"  ? new InteractiveWebAssemblyRenderMode() : new InteractiveServerRenderMode(prerender: false))"  /> 
    <script src="_framework/blazor.web.js"></script>
    <script>
        function onNavigation(){
            var focalPost = document.querySelector('.post-focal');
            if(focalPost) focalPost.scrollIntoView();
            else window.scrollTo({ top: 0, left: 0, behavior: 'instant' });
        }
       
    
        // https://github.com/dotnet/aspnetcore/issues/51338#issuecomment-1766578689
        Blazor.addEventListener('enhancedload', () => {
            onNavigation();
        });
        onNavigation();
        document.addEventListener('click', event => {
            var href = null;            
            var t = event.target;
            while(t) {
                if(t.tagName == 'A' && t.href) {
                    href = new URL(t.href);
                    break;
                }
                t = t.parentNode;
            }
            if(href && (document.querySelector('#components-reconnect-modal') || ((href.pathname == '/login'|| href.pathname == '/logout') && href.host == window.location.host))) {
                window.location = href;
            }
            
        }, true);


    </script>
</body>

</html>

