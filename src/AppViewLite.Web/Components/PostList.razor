@using Microsoft.AspNetCore.Mvc.Routing
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager Navigation

@code {
    [Parameter] public required BlueskyPost[] Posts { get; set; }
    [Parameter] public bool ShowInReplyTo { get; set; } = true;
    [Parameter] public string? FocalPostDid { get; set; }
    [Parameter] public string? FocalPostRKey { get; set; }
    [Parameter] public string? NextContinuation { get; set; }
    private string? continuationUrl;

    protected override void OnParametersSet()
    {
        if (NextContinuation != null)
        {
            var url = Navigation.ToAbsoluteUri(Navigation.Uri);
            var query = QueryHelpers.ParseQuery(url.Query);
            query["continuation"] = NextContinuation;
            continuationUrl = QueryHelpers.AddQueryString(url.GetLeftPart(UriPartial.Path), query);
        }
        else
        {
            continuationUrl = null;
        }
    }

}

<ul class="post-list">
    @foreach (var post in Posts)
    {
        <PostRow Post="post" ShowInReplyTo="@ShowInReplyTo" IsFocalPost="@(post.Author.Did == FocalPostDid && post.RKey == FocalPostRKey)" />

    }
</ul>

@if (continuationUrl != null)
{
    
    <div class="pagination-button">
        <a href="@continuationUrl">Next</a>
    </div>
}
