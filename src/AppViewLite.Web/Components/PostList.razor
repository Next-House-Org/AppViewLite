@using Microsoft.AspNetCore.Mvc.Routing
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager Navigation

@code {
    [Parameter] public required BlueskyPost[] Posts { get; set; }
    [Parameter] public bool ShowInReplyTo { get; set; } = true;
    [Parameter] public string? FocalPostDid { get; set; }
    [Parameter] public string? FocalPostRKey { get; set; }
    [Parameter] public string? NextContinuation { get; set; }
    private Uri? continuationUrl;
    private Plc? focalPostPlc;

    protected override void OnParametersSet()
    {
        continuationUrl = Navigation.GetNextContinuationUrl(NextContinuation);
        focalPostPlc = FocalPostDid != null ? BlueskyEnrichedApis.Instance.WithRelationshipsLock(rels => rels.SerializeDid(FocalPostDid)) : null;
    }

    static bool IsLastOfGroup(BlueskyPost post, BlueskyPost? next)
    {
        if (next == null) return true;
        return next?.Data?.InReplyToPostId != post.PostId && next?.Data?.RootPostId != post.PostId;
    }

}

<ul class="post-list main-paginated-list" data-focalpostdid="@FocalPostDid">
    @for (int i = 0; i < Posts.Length; i++)
    {
        var post = Posts[i];
        var prev = i != 0 ? Posts[i - 1] : null;
        var next = i != Posts.Length - 1 ? Posts[i + 1] : null;
        var postId = post.PostId;
        <PostRow 
            Post="post"
            ShowThreadLine="@(
                (prev?.PostId == post.InReplyToPostId) ||
                (prev?.PostId == post.RootPostId && post.IsReply) || 
                (postId == next?.RootPostId) ||
                (postId == next?.InReplyToPostId))"
            ShowInReplyTo="@(
                (ShowInReplyTo && (prev?.RootPostId != post.RootPostId && prev?.PostId.Author != postId.Author)) || 
                (post.IsReply && ((prev == null || (IsLastOfGroup(prev, post) && post.InReplyToPostId!.Value.Author != focalPostPlc)))))"
            IsLastOfGroup="@IsLastOfGroup(post, next)"
            ShowRestOfThreadLink="@(prev?.PostId == post.RootPostId && prev.PostId != post.InReplyToPostId)"
            IsFocalPost="@(post.Author.Did == FocalPostDid && post.RKey == FocalPostRKey)" 
        />

    }
</ul>

@if (continuationUrl != null)
{
    
    <div class="pagination-button">
        <a href="@continuationUrl">Next</a>
    </div>
}
