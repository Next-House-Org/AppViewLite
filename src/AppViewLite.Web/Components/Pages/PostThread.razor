@page "/@{did}/{rkey:length(13)}"
@page "/@{did}/{rkey:length(13)}/media/{mediaId:int}"
@page "/@{did}@{activityPubInstance}/{rkey:length(13)}"
@page "/@{did}@{activityPubInstance}/{rkey:length(13)}/media/{mediaId:int}"
@inherits ProfileComponentBase

@code {
    [Parameter] public required string RKey { get; set; }
    [Parameter] public int MediaId { get; set; }
    [SupplyParameterFromQuery] [Parameter] public string? Continuation { get; set; }
    private BlueskyPost? FocalPost;
    private PostsAndContinuation Posts = new();
    private string ResolvedFocalDid;

    protected override async Task OnParametersSetAsync()
    {
        await ResolveDidAsync();
        ResolvedFocalDid = Did;
        Posts = await Apis.GetPostThreadAsync(Did, RKey, default, Continuation, RequestContext);
        FocalPost = Posts.Posts.FirstOrDefault(x => x.RKey == RKey && x.Did == Did);

        if (FocalPost != null && FocalPost.Data == null)
        {
            // Theater requires this data immediately.
            await Apis.EnrichAsync([FocalPost], RequestContext.CreateInfinite(RequestContext.Session, urgent: true));
        }
    }
}

<PageTitle>@(FocalPost != null ? FocalPost.Author.DisplayNameOrFallback + (FocalPost.Data?.Text != null ? ": " + FocalPost.Data.Text : null) : "Post")</PageTitle>

<PostList Posts="@Posts.Posts" NextContinuation="@Posts.NextContinuation" ShowInReplyTo="false" FocalPostDid="@ResolvedFocalDid" FocalPostRKey="@RKey" FocalVideoAutoPlay="true" />

@if (FocalPost?.OriginalPostUrl != null)
{
    <div class="post-link-to-external-thread">
        <a href="@FocalPost?.OriginalPostUrl" target="_blank" rel="noreferrer">See full thread on @(new Uri(FocalPost!.OriginalPostUrl).Host)</a>
    </div>
}
