@page "/search"
@inject NavigationManager Navigation
@inject RequestContext RequestContext

@code {
    [Parameter][SupplyParameterFromQuery] public required string Q { get; set; }
    [Parameter][SupplyParameterFromQuery] public required string? From { get; set; }
    [Parameter][SupplyParameterFromQuery] public required DateTime? Since { get; set; }
    [Parameter][SupplyParameterFromQuery] public required DateTime? Until { get; set; }
    [Parameter][SupplyParameterFromQuery] public string? Continuation { get; set; }
    [Parameter][SupplyParameterFromQuery] public required int? MinLikes { get; set; }
    [Parameter][SupplyParameterFromQuery] public required int? MinReposts { get; set; }
    [Parameter][SupplyParameterFromQuery] public required string? Sort { get; set; }
    [Parameter][SupplyParameterFromQuery] public required int? Limit { get; set; }
    [Parameter][SupplyParameterFromQuery] public required string? Language { get; set; }
    private string? NextContinuation;

    private BlueskyPost[] Posts = [];
    public bool IsTopPosts => Sort == "top";

    protected override async Task OnParametersSetAsync()
    {

        if (Q != null && Q.StartsWith("https://bsky.app/", StringComparison.Ordinal))
        {
            Navigation.NavigateTo("/" + Q);
            return; 
        }
        var options = new PostSearchOptions
            {
                Query = Q,
                Since = Since,
                Until = Until,
                Author = From,
                MinLikes = MinLikes ?? 0,
                MinReposts = MinReposts ?? 0,
                Language = Language == "all" || string.IsNullOrEmpty(Language) ? LanguageEnum.Unknown : BlueskyRelationships.ParseLanguage(Language)
            };

        (Posts, NextContinuation) = IsTopPosts ? await BlueskyEnrichedApis.Instance.SearchTopPostsAsync(options, limit: Limit.GetValueOrDefault(), Continuation, RequestContext.OnStateChanged(StateHasChanged)) : await BlueskyEnrichedApis.Instance.SearchLatestPostsAsync(options, limit: Limit.GetValueOrDefault(), Continuation, RequestContext.OnStateChanged(StateHasChanged));
    }
}

<PageTitle>Search: @Q</PageTitle>

<form action="/search" method="get" class="search-form">
    <div class="search-form-row">
        <label>Text: <input type="search" name="q" value="@Q" autofocus /></label>
        <label>Author: <input type="text" name="from" value="@From" /></label>
    </div>
    <div class="search-form-row">
        <label>Since: <input type="date" name="since" value="@Since?.ToString("yyyy-MM-dd")" /></label>
        <label>Until: <input type="date" name="until" value="@Until?.ToString("yyyy-MM-dd")" /></label>
    </div>
    <div class="search-form-row">
        <label>Minimum likes: <input type="number" min="0" max="1000000000" name="minLikes" value="@MinLikes" /></label>
        <label>Minimum reposts: <input type="number" min="0" max="1000000000" name="minReposts" value="@MinReposts" /></label>
    </div>
    <div class="search-form-row">
        <label>
            <select name="language">
                @foreach (var lang in Enum.GetNames<LanguageEnum>().Where(x => x != "pt_BR" && x != "pt_PT").Select(x =>
                {
                   if (x == "Unknown") return (Code: "all", DisplayName: "All languages");
                   var code = x.Replace('_', '-');
                   var displayName = System.Globalization.CultureInfo.GetCultureInfo(code)?.DisplayName ?? code;
                   return (Code: code, DisplayName: displayName);
                }).OrderByDescending(x => x.Code == "all").ThenBy(x => x.DisplayName, StringComparer.InvariantCultureIgnoreCase))
                {
                    <option value="@lang.Code" selected="@(Language == lang.Code)">@lang.DisplayName</option>
                }
            </select>
        </label>
        <label></label>
    </div>
    <div class="search-form-row">
        <label>
            <select name="sort" onchange="this.form.submit()">
                <option value="latest">Most recent</option>
                <option value="top" selected="@IsTopPosts">Top posts</option>
            </select>
        </label>
        <label>
            <input type="submit" value="Search">
        </label>
    </div>
</form>

<PostList Posts="@Posts" NextContinuation="@NextContinuation" />
