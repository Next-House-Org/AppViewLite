@code {
    [Parameter] public required CoalescedNotification Notification { get; set; }
    const int MaxInlineUsers = 3; // A, B and C    *or*    A, B and 2 others
    const int MaxProfilePictures = 6;

}
@{
    var profileCount = Notification.Profiles?.Count ?? 0;
    var embedFullPost = Notification.Kind is NotificationKind.MentionedYou or NotificationKind.QuotedYourPost or NotificationKind.RepliedtoYourThread or NotificationKind.RepliedToYourPost;
}
<div class="notification">
    <a class="notification-background-link" href="@(Notification.Post?.BaseUrl ?? Notification.Profiles?.FirstOrDefault()?.BaseUrl)"></a>
    @if (!embedFullPost)
    {
        <div class="notification-kind-icon">
            @if (Notification.Kind == NotificationKind.LikedYourPost)
            {
                <svg fill="none" viewBox="0 0 24 24" width="28" height="28" class="r-84gixx"><path fill="#ec4899" fill-rule="evenodd" clip-rule="evenodd" d="M12.489 21.372c8.528-4.78 10.626-10.47 9.022-14.47-.779-1.941-2.414-3.333-4.342-3.763-1.697-.378-3.552.003-5.169 1.287-1.617-1.284-3.472-1.665-5.17-1.287-1.927.43-3.562 1.822-4.34 3.764-1.605 4 .493 9.69 9.021 14.47a1 1 0 0 0 .978 0Z"></path></svg>
            }
            else if (Notification.Kind == NotificationKind.RepostedYourPost)
            {
                <svg fill="none" viewBox="0 0 24 24" width="28" height="28" style="color: rgb(19, 195, 113);"><path fill="hsl(152, 82%, 42%)" fill-rule="evenodd" clip-rule="evenodd" d="M17.957 2.293a1 1 0 1 0-1.414 1.414L17.836 5H6a3 3 0 0 0-3 3v3a1 1 0 1 0 2 0V8a1 1 0 0 1 1-1h11.836l-1.293 1.293a1 1 0 0 0 1.414 1.414l2.47-2.47a1.75 1.75 0 0 0 0-2.474l-2.47-2.47ZM20 12a1 1 0 0 1 1 1v3a3 3 0 0 1-3 3H6.164l1.293 1.293a1 1 0 1 1-1.414 1.414l-2.47-2.47a1.75 1.75 0 0 1 0-2.474l2.47-2.47a1 1 0 0 1 1.414 1.414L6.164 17H18a1 1 0 0 0 1-1v-3a1 1 0 0 1 1-1Z"></path></svg>
            }
            else if(Notification.Kind == NotificationKind.FollowedYou)
            {
                <svg fill="none" viewBox="0 0 24 24" width="28" height="28" style="color: rgb(16, 131, 254);"><path fill="hsl(211, 99%, 53%)" fill-rule="evenodd" clip-rule="evenodd" d="M7.5 6.5a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM12 12c-4.758 0-8.083 3.521-8.496 7.906A1 1 0 0 0 4.5 21H15a3 3 0 1 1 0-6c0-.824.332-1.571.87-2.113C14.739 12.32 13.435 12 12 12Zm6 2a1 1 0 0 1 1 1v2h2a1 1 0 1 1 0 2h-2v2a1 1 0 1 1-2 0v-2h-2a1 1 0 1 1 0-2h2v-2a1 1 0 0 1 1-1Z"></path></svg>
            }
        </div>
    }
    @if (embedFullPost)
    {
        <PostRow Post="@Notification.Post" />
    }
    else if (profileCount >= 2)
    {

        <details class="notification-meta notification-indented">
            <summary>



                <div class="notification-profile-summaries summary-when-closed">
                    @for (int i = 0; i < profileCount; i++)
                    {
                        if (i == MaxProfilePictures) break;
                        var profile = Notification.Profiles[i];
                        <a href="@profile.BaseUrl" class="notification-profile-summary" title="@profile.DisplayNameOrFallback">
                            <img src="@profile.AvatarUrl" class="profile-image-small" />
                        </a>
                    }
                    <span class="notification-profile-summaries-overflow">
                        @if (profileCount > MaxProfilePictures)
                        {
                            <text>+</text>
                            @(profileCount - MaxProfilePictures)
                        }
                        @if (profileCount > MaxInlineUsers)
                        {
                            <svg fill="none" viewBox="0 0 24 24" width="20" height="20" class="r-13hce6t r-1d4mawv" style="color: rgb(66, 87, 108);"><path fill="hsl(211, 24%, 34.2%)" fill-rule="evenodd" clip-rule="evenodd" d="M3.293 8.293a1 1 0 0 1 1.414 0L12 15.586l7.293-7.293a1 1 0 1 1 1.414 1.414l-8 8a1 1 0 0 1-1.414 0l-8-8a1 1 0 0 1 0-1.414Z"></path></svg>
                        }
                    </span>
                </div>
                <div class="notification-profile-summaries summary-when-open">
                    <span class="notification-profile-summaries-overflow">
                        Hide
                        <svg fill="none" viewBox="0 0 24 24" width="20" height="20" class="r-13hce6t r-1d4mawv" style="color: rgb(11, 15, 20);"><path fill="hsl(211, 28%, 6%)" fill-rule="evenodd" clip-rule="evenodd" d="M12 6a1 1 0 0 1 .707.293l8 8a1 1 0 0 1-1.414 1.414L12 8.414l-7.293 7.293a1 1 0 0 1-1.414-1.414l8-8A1 1 0 0 1 12 6Z"></path></svg>
                    </span>
                    <div>
                        @foreach (var profile in Notification.Profiles)
                        {
                            <a class="notification-profile-entry" href="@profile.BaseUrl">
                                <img src="@profile.AvatarUrl" class="profile-image-small" />
                                @profile.DisplayNameOrFallback
                            </a>
                        }
                    </div>
                </div>
                @for (int i = 0; i < profileCount; i++)
                {
                    if (i != 0)
                    {
                        if (i == MaxInlineUsers - 1)
                        {
                            <text> and </text>
                        }
                        else
                        {
                            <text>, </text>
                        }
                    }
                    if (profileCount <= MaxInlineUsers || i < MaxInlineUsers - 1)
                    {
                        var profile = Notification.Profiles[i];
                        <InlineProfileLink Profile="@profile" />
                    }
                    else
                    {
                        <b>@(profileCount - i) others</b>
                        break;
                    }
                }
                <text></text>
                @Notification.KindDisplayText


                <span class="notification-date">&nbsp;·&nbsp;@Program.ToHumanDate(Notification.LatestDate)</span>

            </summary>
        </details>
    }
    else
    {
        var profile = Notification.Profiles!.Single();
        <NotificationIcon Kind="@Notification.Kind"></NotificationIcon>
        <div class="notification-meta notification-indented notification-single-profile">
            <div class="notification-profile-summaries">
                <a href="@profile.BaseUrl" class="notification-profile-summary" title="@profile.DisplayNameOrFallback">
                    <img src="@profile.AvatarUrl" class="profile-image-small" />
                </a>
            </div>

            <InlineProfileLink Profile="@profile" />
            @Notification.KindDisplayText
            <span class="notification-date">&nbsp;·&nbsp;@Program.ToHumanDate(Notification.LatestDate)</span>

        </div>
    }
    @if (!embedFullPost)
    {
        <div class="notification-post-text notification-indented">
            @if (Notification.Post != null)
            {
                @Notification.Post.Data?.Text
            }
        </div>
    }
</div>
