@inject RequestContext RequestContext
@code{
    [Parameter] public BlueskyProfile Profile { get; set; }

    private AsyncStateToggler IsFollowed;
    protected override void OnParametersSet()
    {
        IsFollowed = new AsyncStateToggler(
            0,
            Profile.IsFollowedBySelf,
            () => BlueskyEnrichedApis.Instance.CreateFollowAsync(Profile.Did, RequestContext),
            rkey => BlueskyEnrichedApis.Instance.DeleteFollowAsync(rkey, RequestContext),
            StateHasChanged);
    }
}
<button @onclick="IsFollowed.ToggleIfNotBusyAsync" class="follow-button @(IsFollowed.HaveRelationship ? "follow-button-unfollow" : null)" actionkind="toggleFollow" data-profiledid="@Profile.Did" data-followrkey="@(IsFollowed.RKey ?? "-")" data-followsyou="@(Profile.FollowsYou ? 1 : 0)">
    @if (IsFollowed.HaveRelationship)
    {
        <text>Unfollow</text>
    }
    else if (Profile.FollowsYou)
    {
        <text>Follow Back</text>
    }
    else 
    {
        <text>Follow</text>
    }
</button>
