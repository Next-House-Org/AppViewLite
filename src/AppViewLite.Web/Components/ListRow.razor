@inject RequestContext RequestContext
@code {
    [Parameter] public required BlueskyModerationBase List { get; set; }
    [Parameter] public bool ShowModerator { get; set; } = true;
}

<div class="list-metadata-row @(ShowModerator ? null : "list-metadata-row-hide-moderator")" data-moderationdid="@List.ModeratorDid" data-moderationlistrkey="@((List as BlueskyList)?.RKey ?? "-")" data-moderationlabelname="@((List as BlueskyLabel)?.Name ?? "-")">
    <a href="@List.BaseUrl" class="list-metadata-avatar" tabindex="-1">
        <img src="@List.GetAvatarUrl(RequestContext)" />
    </a>
    <div class="list-metadata-row-name list-indented"><a class="underline-on-hover" href="@List.BaseUrl">@List.DisplayNameOrFallback</a></div>
    <div class="list-metadata-row-author list-indented">List by <a class="underline-on-hover" href="@List.Moderator.BaseUrl">@List.Moderator.DisplayNameOrFallback</a></div>
    <div class="list-metadata-row-description">
        <TextWithFacets Text="@List.Description" Facets="@List.DescriptionFacets" />
    </div>
    @if (RequestContext.IsLoggedIn)
    {
        <div class="list-metadata-row-modes">
            @foreach (var (mode, text) in new[] { (ModerationBehavior.None, "Disabled"), (ModerationBehavior.Badge, "Badge"), (ModerationBehavior.BlurAll, "Blur"), (ModerationBehavior.Mute, "Mute") })
            {
                <button actionkind="setLabelerMode" class="labeler-mode @(List.Mode == mode ? "labeler-mode-active" : null)" data-mode="@mode">@text</button>
            }
        </div>
    }
</div>

